version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: news_portal
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  opensearch:
    image: opensearchproject/opensearch:2.5.0
    environment:
      discovery.type: single-node
      plugins.security.disabled: "true"
      bootstrap.memory_lock: "true"
      OPENSEARCH_JAVA_OPTS: -Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9600:9600"

  gateway:
    build:
      context: .
      dockerfile: gateway-api/Dockerfile
    environment:
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@db:5432/news_portal
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    environment:
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@db:5432/news_portal
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - db
      - redis

  editor:
    # Build the Next.js editor console
    image: node:20
    working_dir: /app
    volumes:
      - ./editor-console:/app
      - /app/node_modules
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://gateway:8000
    command: sh -c "npm install && npm run dev"
    ports:
      - "3000:3000"
    depends_on:
      - gateway

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - db

volumes:
  db_data:
    driver: local